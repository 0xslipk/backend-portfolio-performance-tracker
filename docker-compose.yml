
version: '3.7'
services:
  backend:
    restart: always
    build:
      context: .
      dockerfile: dev.Dockerfile
    networks:
      - backend-net
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run start:dev
    env_file:
      - .env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/dist
  postgres:
    image: postgres:16.0-alpine
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d amulet"]
      interval: 5s
      timeout: 5s
      retries: 5
    env_file:
      - .env
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./.docker/postgres/portfolio_performance_tracker_init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend-net
    ports:
      - 5432:5432
networks:
  backend-net:
